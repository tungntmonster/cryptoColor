{
  "contractName": "Color",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colors",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_color",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getColorsByOwner",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"colorToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"colors\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getColorsByOwner\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_color\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/TungNT2K/Desktop/CryptoColor/src/contracts/Color.sol\":\"Color\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/TungNT2K/Desktop/CryptoColor/src/contracts/Color.sol\":{\"keccak256\":\"0x922df385517c780bd5a474be3b64e5b4e00cfaf9d0682edff0ebe59ad568dee9\",\"urls\":[\"bzz-raw://dbc0fc27ddf1c2548dc15f07a1573c554077da6d41adbc49a31ad12e4489a1a5\",\"dweb:/ipfs/Qmc2UzRsHtDax3BFbPmgDwLvWTxwUT9A9FrJLoBR89f1HH\"]},\"/C/Users/TungNT2K/Desktop/CryptoColor/src/contracts/ERC721Full.sol\":{\"keccak256\":\"0x799bcceb55c3787ad018a125a835f199f58e25ce0f6a6f9ae90562627ea4d124\",\"urls\":[\"bzz-raw://07fa5879ada17de950d108c922d6f866e63eaa68aa12b04050cecb60e10d89d5\",\"dweb:/ipfs/QmbLRxvYXQbJbgb3KuC8erz2u9rR39DjjPwe5fu3LHpcn9\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f436f6c6f720000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f434f4c4f520000000000000000000000000000000000000000000000000000008152508181620000986301ffc9a760e01b6200011c60201b60201c565b620000b06380ac58cd60e01b6200011c60201b60201c565b620000c863780e9d6360e01b6200011c60201b60201c565b8160099080519060200190620000e0929190620001f4565b5080600a9080519060200190620000f9929190620001f4565b5062000112635b5e139f60e01b6200011c60201b60201c565b5050505062000318565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000188576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017f90620002e5565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200023757805160ff191683800117855562000268565b8280016001018555821562000268579182015b82811115620002675782518255916020019190600101906200024a565b5b5090506200027791906200027b565b5090565b620002a091905b808211156200029c57600081600090555060010162000282565b5090565b90565b6000620002b2601c8362000307565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b600060208201905081810360008301526200030081620002a3565b9050919050565b600082825260208201905092915050565b612fe080620003286000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063bd11f69d11610071578063bd11f69d14610367578063c87b56dd14610397578063d85d3d27146103c7578063d96f8200146103e3578063e985e9c5146104135761012c565b806370a08231146102b157806380b0d8c6146102e157806395d89b4114610311578063a22cb4651461032f578063b88d4fde1461034b5761012c565b806323b872dd116100f457806323b872dd146101e95780632f745c591461020557806342842e0e146102355780634f6ccce7146102515780636352211e146102815761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af57806318160ddd146101cb575b600080fd5b61014b600480360361014691908101906120c9565b610443565b6040516101589190612a6d565b60405180910390f35b6101696104aa565b6040516101769190612aaa565b60405180910390f35b6101996004803603610194919081019061215c565b61054c565b6040516101a691906129e4565b60405180910390f35b6101c960048036036101c4919081019061208d565b6105d1565b005b6101d361077e565b6040516101e09190612d0c565b60405180910390f35b61020360048036036101fe9190810190611f87565b61078b565b005b61021f600480360361021a919081019061208d565b6107e4565b60405161022c9190612d0c565b60405180910390f35b61024f600480360361024a9190810190611f87565b61088d565b005b61026b6004803603610266919081019061215c565b6108ad565b6040516102789190612d0c565b60405180910390f35b61029b6004803603610296919081019061215c565b610917565b6040516102a891906129e4565b60405180910390f35b6102cb60048036036102c69190810190611f22565b6109c9565b6040516102d89190612d0c565b60405180910390f35b6102fb60048036036102f69190810190611f22565b610a88565b6040516103089190612a4b565b60405180910390f35b610319610c46565b6040516103269190612aaa565b60405180910390f35b61034960048036036103449190810190612051565b610ce8565b005b61036560048036036103609190810190611fd6565b610e54565b005b610381600480360361037c919081019061215c565b610eb0565b60405161038e9190612a88565b60405180910390f35b6103b160048036036103ac919081019061215c565b610f69565b6040516103be9190612aaa565b60405180910390f35b6103e160048036036103dc919081019061211b565b611066565b005b6103fd60048036036103f8919081019061215c565b611178565b60405161040a91906129e4565b60405180910390f35b61042d60048036036104289190810190611f4b565b6111ab565b60405161043a9190612a6d565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105425780601f1061051757610100808354040283529160200191610542565b820191906000526020600020905b81548152906001019060200180831161052557829003601f168201915b5050505050905090565b60006105578261123f565b610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90612c4c565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105dc82610917565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490612cac565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061068d575061068c81336111ab565b5b6106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c390612bcc565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b61079533826112b1565b6107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb90612ccc565b60405180910390fd5b6107df83838361138f565b505050565b60006107ef836109c9565b8210610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082790612acc565b60405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061087a57fe5b9060005260206000200154905092915050565b6108a883838360405180602001604052806000815250610e54565b505050565b60006108b761077e565b82106108f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ef90612cec565b60405180910390fd5b6007828154811061090557fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790612c0c565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3190612bec565b60405180910390fd5b610a81600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206113b3565b9050919050565b60606000610a95836109c9565b9050606081604051908082528060200260200182016040528015610acd57816020015b6060815260200190600190039081610ab85790505b509050600080905060008090505b600c80549050811015610c3a578573ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c2d57600c8181548110610b5c57fe5b906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bfa5780601f10610bcf57610100808354040283529160200191610bfa565b820191906000526020600020905b815481529060010190602001808311610bdd57829003601f168201915b5050505050838381518110610c0b57fe5b6020026020010181905250610c2a6001836113c190919063ffffffff16565b91505b8080600101915050610adb565b50819350505050919050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cde5780601f10610cb357610100808354040283529160200191610cde565b820191906000526020600020905b815481529060010190602001808311610cc157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4e90612b6c565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e489190612a6d565b60405180910390a35050565b610e5f84848461078b565b610e6b84848484611416565b610eaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea190612aec565b60405180910390fd5b50505050565b600c8181548110610ebd57fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f615780601f10610f3657610100808354040283529160200191610f61565b820191906000526020600020905b815481529060010190602001808311610f4457829003601f168201915b505050505081565b6060610f748261123f565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90612c8c565b60405180910390fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561105a5780601f1061102f5761010080835404028352916020019161105a565b820191906000526020600020905b81548152906001019060200180831161103d57829003601f168201915b50505050509050919050565b600d8160405161107691906129cd565b908152602001604051809103902060009054906101000a900460ff161561109c57600080fd5b6000600c8290806001815401808255809150509060018203906000526020600020016000909192909190915090805190602001906110db929190611d40565b5090506110e8338261152d565b6001600d836040516110fa91906129cd565b908152602001604051809103902060006101000a81548160ff02191690831515021790555033600e600060018403815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600e6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006112bc8261123f565b6112fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f290612bac565b60405180910390fd5b600061130683610917565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061137557508373ffffffffffffffffffffffffffffffffffffffff1661135d8461054c565b73ffffffffffffffffffffffffffffffffffffffff16145b80611386575061138581856111ab565b5b91505092915050565b61139a83838361154e565b6113a4838261177d565b6113ae828261191b565b505050565b600081600001549050919050565b60008082840190508381101561140c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140390612b2c565b60405180910390fd5b8091505092915050565b60006114378473ffffffffffffffffffffffffffffffffffffffff166119e2565b6114445760019050611525565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161148594939291906129ff565b602060405180830381600087803b15801561149f57600080fd5b505af11580156114b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114d791908101906120f2565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b61153782826119f5565b611541828261191b565b61154a81611ba7565b5050565b8273ffffffffffffffffffffffffffffffffffffffff1661156e82610917565b73ffffffffffffffffffffffffffffffffffffffff16146115c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bb90612c6c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162b90612b4c565b60405180910390fd5b61163d81611bf3565b611684600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611cb1565b6116cb600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611cd4565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006117d56001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611cea90919063ffffffff16565b90506000600660008481526020019081526020016000205490508181146118c2576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061184257fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061189a57fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036119149190611dc0565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5c90612c2c565b60405180910390fd5b611a6e8161123f565b15611aae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa590612b0c565b60405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b47600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611cd4565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611cae5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611cc960018260000154611cea90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115611d2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2690612b8c565b60405180910390fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d8157805160ff1916838001178555611daf565b82800160010185558215611daf579182015b82811115611dae578251825591602001919060010190611d93565b5b509050611dbc9190611dec565b5090565b815481835581811115611de757818360005260206000209182019101611de69190611dec565b5b505050565b611e0e91905b80821115611e0a576000816000905550600101611df2565b5090565b90565b600081359050611e2081612f41565b92915050565b600081359050611e3581612f58565b92915050565b600081359050611e4a81612f6f565b92915050565b600081519050611e5f81612f6f565b92915050565b600082601f830112611e7657600080fd5b8135611e89611e8482612d54565b612d27565b91508082526020830160208301858383011115611ea557600080fd5b611eb0838284612eee565b50505092915050565b600082601f830112611eca57600080fd5b8135611edd611ed882612d80565b612d27565b91508082526020830160208301858383011115611ef957600080fd5b611f04838284612eee565b50505092915050565b600081359050611f1c81612f86565b92915050565b600060208284031215611f3457600080fd5b6000611f4284828501611e11565b91505092915050565b60008060408385031215611f5e57600080fd5b6000611f6c85828601611e11565b9250506020611f7d85828601611e11565b9150509250929050565b600080600060608486031215611f9c57600080fd5b6000611faa86828701611e11565b9350506020611fbb86828701611e11565b9250506040611fcc86828701611f0d565b9150509250925092565b60008060008060808587031215611fec57600080fd5b6000611ffa87828801611e11565b945050602061200b87828801611e11565b935050604061201c87828801611f0d565b925050606085013567ffffffffffffffff81111561203957600080fd5b61204587828801611e65565b91505092959194509250565b6000806040838503121561206457600080fd5b600061207285828601611e11565b925050602061208385828601611e26565b9150509250929050565b600080604083850312156120a057600080fd5b60006120ae85828601611e11565b92505060206120bf85828601611f0d565b9150509250929050565b6000602082840312156120db57600080fd5b60006120e984828501611e3b565b91505092915050565b60006020828403121561210457600080fd5b600061211284828501611e50565b91505092915050565b60006020828403121561212d57600080fd5b600082013567ffffffffffffffff81111561214757600080fd5b61215384828501611eb9565b91505092915050565b60006020828403121561216e57600080fd5b600061217c84828501611f0d565b91505092915050565b600061219183836122de565b905092915050565b6121a281612eb8565b82525050565b6121b181612e44565b82525050565b60006121c282612dbc565b6121cc8185612df5565b9350836020820285016121de85612dac565b8060005b8581101561221a57848403895281516121fb8582612185565b945061220683612de8565b925060208a019950506001810190506121e2565b50829750879550505050505092915050565b61223581612e56565b82525050565b600061224682612dc7565b6122508185612e06565b9350612260818560208601612efd565b61226981612f30565b840191505092915050565b600061227f82612ddd565b6122898185612e28565b9350612299818560208601612efd565b6122a281612f30565b840191505092915050565b60006122b882612ddd565b6122c28185612e39565b93506122d2818560208601612efd565b80840191505092915050565b60006122e982612dd2565b6122f38185612e17565b9350612303818560208601612efd565b61230c81612f30565b840191505092915050565b600061232282612dd2565b61232c8185612e28565b935061233c818560208601612efd565b61234581612f30565b840191505092915050565b600061235d602b83612e28565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b60006123c3603283612e28565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000612429601c83612e28565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612469601b83612e28565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006124a9602483612e28565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061250f601983612e28565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b600061254f601e83612e28565b91507f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006000830152602082019050919050565b600061258f602c83612e28565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006125f5603883612e28565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b600061265b602a83612e28565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b60006126c1602983612e28565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612727602083612e28565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000612767602c83612e28565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006127cd602983612e28565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612833602f83612e28565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000612899602183612e28565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006128ff603183612e28565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000612965602c83612e28565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b6129c781612eae565b82525050565b60006129d982846122ad565b915081905092915050565b60006020820190506129f960008301846121a8565b92915050565b6000608082019050612a146000830187612199565b612a2160208301866121a8565b612a2e60408301856129be565b8181036060830152612a40818461223b565b905095945050505050565b60006020820190508181036000830152612a6581846121b7565b905092915050565b6000602082019050612a82600083018461222c565b92915050565b60006020820190508181036000830152612aa28184612317565b905092915050565b60006020820190508181036000830152612ac48184612274565b905092915050565b60006020820190508181036000830152612ae581612350565b9050919050565b60006020820190508181036000830152612b05816123b6565b9050919050565b60006020820190508181036000830152612b258161241c565b9050919050565b60006020820190508181036000830152612b458161245c565b9050919050565b60006020820190508181036000830152612b658161249c565b9050919050565b60006020820190508181036000830152612b8581612502565b9050919050565b60006020820190508181036000830152612ba581612542565b9050919050565b60006020820190508181036000830152612bc581612582565b9050919050565b60006020820190508181036000830152612be5816125e8565b9050919050565b60006020820190508181036000830152612c058161264e565b9050919050565b60006020820190508181036000830152612c25816126b4565b9050919050565b60006020820190508181036000830152612c458161271a565b9050919050565b60006020820190508181036000830152612c658161275a565b9050919050565b60006020820190508181036000830152612c85816127c0565b9050919050565b60006020820190508181036000830152612ca581612826565b9050919050565b60006020820190508181036000830152612cc58161288c565b9050919050565b60006020820190508181036000830152612ce5816128f2565b9050919050565b60006020820190508181036000830152612d0581612958565b9050919050565b6000602082019050612d2160008301846129be565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612d4a57600080fd5b8060405250919050565b600067ffffffffffffffff821115612d6b57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612d9757600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612e4f82612e8e565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612ec382612eca565b9050919050565b6000612ed582612edc565b9050919050565b6000612ee782612e8e565b9050919050565b82818337600083830152505050565b60005b83811015612f1b578082015181840152602081019050612f00565b83811115612f2a576000848401525b50505050565b6000601f19601f8301169050919050565b612f4a81612e44565b8114612f5557600080fd5b50565b612f6181612e56565b8114612f6c57600080fd5b50565b612f7881612e62565b8114612f8357600080fd5b50565b612f8f81612eae565b8114612f9a57600080fd5b5056fea365627a7a7231582074bd71ea93fb11272ad65d251f122a46f1d5342ee39f7ab6e379920bfc4bc4426c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063bd11f69d11610071578063bd11f69d14610367578063c87b56dd14610397578063d85d3d27146103c7578063d96f8200146103e3578063e985e9c5146104135761012c565b806370a08231146102b157806380b0d8c6146102e157806395d89b4114610311578063a22cb4651461032f578063b88d4fde1461034b5761012c565b806323b872dd116100f457806323b872dd146101e95780632f745c591461020557806342842e0e146102355780634f6ccce7146102515780636352211e146102815761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af57806318160ddd146101cb575b600080fd5b61014b600480360361014691908101906120c9565b610443565b6040516101589190612a6d565b60405180910390f35b6101696104aa565b6040516101769190612aaa565b60405180910390f35b6101996004803603610194919081019061215c565b61054c565b6040516101a691906129e4565b60405180910390f35b6101c960048036036101c4919081019061208d565b6105d1565b005b6101d361077e565b6040516101e09190612d0c565b60405180910390f35b61020360048036036101fe9190810190611f87565b61078b565b005b61021f600480360361021a919081019061208d565b6107e4565b60405161022c9190612d0c565b60405180910390f35b61024f600480360361024a9190810190611f87565b61088d565b005b61026b6004803603610266919081019061215c565b6108ad565b6040516102789190612d0c565b60405180910390f35b61029b6004803603610296919081019061215c565b610917565b6040516102a891906129e4565b60405180910390f35b6102cb60048036036102c69190810190611f22565b6109c9565b6040516102d89190612d0c565b60405180910390f35b6102fb60048036036102f69190810190611f22565b610a88565b6040516103089190612a4b565b60405180910390f35b610319610c46565b6040516103269190612aaa565b60405180910390f35b61034960048036036103449190810190612051565b610ce8565b005b61036560048036036103609190810190611fd6565b610e54565b005b610381600480360361037c919081019061215c565b610eb0565b60405161038e9190612a88565b60405180910390f35b6103b160048036036103ac919081019061215c565b610f69565b6040516103be9190612aaa565b60405180910390f35b6103e160048036036103dc919081019061211b565b611066565b005b6103fd60048036036103f8919081019061215c565b611178565b60405161040a91906129e4565b60405180910390f35b61042d60048036036104289190810190611f4b565b6111ab565b60405161043a9190612a6d565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105425780601f1061051757610100808354040283529160200191610542565b820191906000526020600020905b81548152906001019060200180831161052557829003601f168201915b5050505050905090565b60006105578261123f565b610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90612c4c565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105dc82610917565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490612cac565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061068d575061068c81336111ab565b5b6106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c390612bcc565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b61079533826112b1565b6107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb90612ccc565b60405180910390fd5b6107df83838361138f565b505050565b60006107ef836109c9565b8210610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082790612acc565b60405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061087a57fe5b9060005260206000200154905092915050565b6108a883838360405180602001604052806000815250610e54565b505050565b60006108b761077e565b82106108f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ef90612cec565b60405180910390fd5b6007828154811061090557fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790612c0c565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3190612bec565b60405180910390fd5b610a81600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206113b3565b9050919050565b60606000610a95836109c9565b9050606081604051908082528060200260200182016040528015610acd57816020015b6060815260200190600190039081610ab85790505b509050600080905060008090505b600c80549050811015610c3a578573ffffffffffffffffffffffffffffffffffffffff16600e600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c2d57600c8181548110610b5c57fe5b906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bfa5780601f10610bcf57610100808354040283529160200191610bfa565b820191906000526020600020905b815481529060010190602001808311610bdd57829003601f168201915b5050505050838381518110610c0b57fe5b6020026020010181905250610c2a6001836113c190919063ffffffff16565b91505b8080600101915050610adb565b50819350505050919050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cde5780601f10610cb357610100808354040283529160200191610cde565b820191906000526020600020905b815481529060010190602001808311610cc157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4e90612b6c565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e489190612a6d565b60405180910390a35050565b610e5f84848461078b565b610e6b84848484611416565b610eaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea190612aec565b60405180910390fd5b50505050565b600c8181548110610ebd57fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f615780601f10610f3657610100808354040283529160200191610f61565b820191906000526020600020905b815481529060010190602001808311610f4457829003601f168201915b505050505081565b6060610f748261123f565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90612c8c565b60405180910390fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561105a5780601f1061102f5761010080835404028352916020019161105a565b820191906000526020600020905b81548152906001019060200180831161103d57829003601f168201915b50505050509050919050565b600d8160405161107691906129cd565b908152602001604051809103902060009054906101000a900460ff161561109c57600080fd5b6000600c8290806001815401808255809150509060018203906000526020600020016000909192909190915090805190602001906110db929190611d40565b5090506110e8338261152d565b6001600d836040516110fa91906129cd565b908152602001604051809103902060006101000a81548160ff02191690831515021790555033600e600060018403815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600e6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006112bc8261123f565b6112fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f290612bac565b60405180910390fd5b600061130683610917565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061137557508373ffffffffffffffffffffffffffffffffffffffff1661135d8461054c565b73ffffffffffffffffffffffffffffffffffffffff16145b80611386575061138581856111ab565b5b91505092915050565b61139a83838361154e565b6113a4838261177d565b6113ae828261191b565b505050565b600081600001549050919050565b60008082840190508381101561140c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140390612b2c565b60405180910390fd5b8091505092915050565b60006114378473ffffffffffffffffffffffffffffffffffffffff166119e2565b6114445760019050611525565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161148594939291906129ff565b602060405180830381600087803b15801561149f57600080fd5b505af11580156114b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114d791908101906120f2565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b61153782826119f5565b611541828261191b565b61154a81611ba7565b5050565b8273ffffffffffffffffffffffffffffffffffffffff1661156e82610917565b73ffffffffffffffffffffffffffffffffffffffff16146115c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bb90612c6c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162b90612b4c565b60405180910390fd5b61163d81611bf3565b611684600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611cb1565b6116cb600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611cd4565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006117d56001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611cea90919063ffffffff16565b90506000600660008481526020019081526020016000205490508181146118c2576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061184257fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061189a57fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036119149190611dc0565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5c90612c2c565b60405180910390fd5b611a6e8161123f565b15611aae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa590612b0c565b60405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b47600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611cd4565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611cae5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611cc960018260000154611cea90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115611d2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2690612b8c565b60405180910390fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d8157805160ff1916838001178555611daf565b82800160010185558215611daf579182015b82811115611dae578251825591602001919060010190611d93565b5b509050611dbc9190611dec565b5090565b815481835581811115611de757818360005260206000209182019101611de69190611dec565b5b505050565b611e0e91905b80821115611e0a576000816000905550600101611df2565b5090565b90565b600081359050611e2081612f41565b92915050565b600081359050611e3581612f58565b92915050565b600081359050611e4a81612f6f565b92915050565b600081519050611e5f81612f6f565b92915050565b600082601f830112611e7657600080fd5b8135611e89611e8482612d54565b612d27565b91508082526020830160208301858383011115611ea557600080fd5b611eb0838284612eee565b50505092915050565b600082601f830112611eca57600080fd5b8135611edd611ed882612d80565b612d27565b91508082526020830160208301858383011115611ef957600080fd5b611f04838284612eee565b50505092915050565b600081359050611f1c81612f86565b92915050565b600060208284031215611f3457600080fd5b6000611f4284828501611e11565b91505092915050565b60008060408385031215611f5e57600080fd5b6000611f6c85828601611e11565b9250506020611f7d85828601611e11565b9150509250929050565b600080600060608486031215611f9c57600080fd5b6000611faa86828701611e11565b9350506020611fbb86828701611e11565b9250506040611fcc86828701611f0d565b9150509250925092565b60008060008060808587031215611fec57600080fd5b6000611ffa87828801611e11565b945050602061200b87828801611e11565b935050604061201c87828801611f0d565b925050606085013567ffffffffffffffff81111561203957600080fd5b61204587828801611e65565b91505092959194509250565b6000806040838503121561206457600080fd5b600061207285828601611e11565b925050602061208385828601611e26565b9150509250929050565b600080604083850312156120a057600080fd5b60006120ae85828601611e11565b92505060206120bf85828601611f0d565b9150509250929050565b6000602082840312156120db57600080fd5b60006120e984828501611e3b565b91505092915050565b60006020828403121561210457600080fd5b600061211284828501611e50565b91505092915050565b60006020828403121561212d57600080fd5b600082013567ffffffffffffffff81111561214757600080fd5b61215384828501611eb9565b91505092915050565b60006020828403121561216e57600080fd5b600061217c84828501611f0d565b91505092915050565b600061219183836122de565b905092915050565b6121a281612eb8565b82525050565b6121b181612e44565b82525050565b60006121c282612dbc565b6121cc8185612df5565b9350836020820285016121de85612dac565b8060005b8581101561221a57848403895281516121fb8582612185565b945061220683612de8565b925060208a019950506001810190506121e2565b50829750879550505050505092915050565b61223581612e56565b82525050565b600061224682612dc7565b6122508185612e06565b9350612260818560208601612efd565b61226981612f30565b840191505092915050565b600061227f82612ddd565b6122898185612e28565b9350612299818560208601612efd565b6122a281612f30565b840191505092915050565b60006122b882612ddd565b6122c28185612e39565b93506122d2818560208601612efd565b80840191505092915050565b60006122e982612dd2565b6122f38185612e17565b9350612303818560208601612efd565b61230c81612f30565b840191505092915050565b600061232282612dd2565b61232c8185612e28565b935061233c818560208601612efd565b61234581612f30565b840191505092915050565b600061235d602b83612e28565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b60006123c3603283612e28565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000612429601c83612e28565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612469601b83612e28565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006124a9602483612e28565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061250f601983612e28565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b600061254f601e83612e28565b91507f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006000830152602082019050919050565b600061258f602c83612e28565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006125f5603883612e28565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b600061265b602a83612e28565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b60006126c1602983612e28565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612727602083612e28565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000612767602c83612e28565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006127cd602983612e28565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612833602f83612e28565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000612899602183612e28565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006128ff603183612e28565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000612965602c83612e28565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b6129c781612eae565b82525050565b60006129d982846122ad565b915081905092915050565b60006020820190506129f960008301846121a8565b92915050565b6000608082019050612a146000830187612199565b612a2160208301866121a8565b612a2e60408301856129be565b8181036060830152612a40818461223b565b905095945050505050565b60006020820190508181036000830152612a6581846121b7565b905092915050565b6000602082019050612a82600083018461222c565b92915050565b60006020820190508181036000830152612aa28184612317565b905092915050565b60006020820190508181036000830152612ac48184612274565b905092915050565b60006020820190508181036000830152612ae581612350565b9050919050565b60006020820190508181036000830152612b05816123b6565b9050919050565b60006020820190508181036000830152612b258161241c565b9050919050565b60006020820190508181036000830152612b458161245c565b9050919050565b60006020820190508181036000830152612b658161249c565b9050919050565b60006020820190508181036000830152612b8581612502565b9050919050565b60006020820190508181036000830152612ba581612542565b9050919050565b60006020820190508181036000830152612bc581612582565b9050919050565b60006020820190508181036000830152612be5816125e8565b9050919050565b60006020820190508181036000830152612c058161264e565b9050919050565b60006020820190508181036000830152612c25816126b4565b9050919050565b60006020820190508181036000830152612c458161271a565b9050919050565b60006020820190508181036000830152612c658161275a565b9050919050565b60006020820190508181036000830152612c85816127c0565b9050919050565b60006020820190508181036000830152612ca581612826565b9050919050565b60006020820190508181036000830152612cc58161288c565b9050919050565b60006020820190508181036000830152612ce5816128f2565b9050919050565b60006020820190508181036000830152612d0581612958565b9050919050565b6000602082019050612d2160008301846129be565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612d4a57600080fd5b8060405250919050565b600067ffffffffffffffff821115612d6b57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612d9757600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612e4f82612e8e565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612ec382612eca565b9050919050565b6000612ed582612edc565b9050919050565b6000612ee782612e8e565b9050919050565b82818337600083830152505050565b60005b83811015612f1b578082015181840152602081019050612f00565b83811115612f2a576000848401525b50505050565b6000601f19601f8301169050919050565b612f4a81612e44565b8114612f5557600080fd5b50565b612f6181612e56565b8114612f6c57600080fd5b50565b612f7881612e62565b8114612f8357600080fd5b50565b612f8f81612eae565b8114612f9a57600080fd5b5056fea365627a7a7231582074bd71ea93fb11272ad65d251f122a46f1d5342ee39f7ab6e379920bfc4bc4426c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "92:1029:0:-;;;256:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;256:52:0;37865:157:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37942:4;37948:6;11130:40;10787:10;11149:20;;11130:18;;;:40;;:::i;:::-;14212;14082:10;14231:20;;14212:18;;;:40;;:::i;:::-;26545:51;26353:10;26564:31;;26545:18;;;:51;;:::i;:::-;35433:4;35425:5;:12;;;;;;;;;;;;:::i;:::-;;35458:6;35448:7;:16;;;;;;;;;;;;:::i;:::-;;35555:49;35281:10;35574:29;;35555:18;;;:49;;:::i;:::-;35352:260;;37865:157;;92:1029:0;;11877:193:1;11968:10;11953:25;;:11;:25;;;;;11945:66;;;;;;;;;;;;;;;;;;;;;;12058:4;12022:20;:33;12043:11;12022:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;11877:193;:::o;92:1029:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:328:-1:-;;166:67;230:2;225:3;166:67;;;159:74;;266:30;262:1;257:3;253:11;246:51;325:2;320:3;316:12;309:19;;152:182;;;;342:407;;533:2;522:9;518:18;510:26;;583:9;577:4;573:20;569:1;558:9;554:17;547:47;608:131;734:4;608:131;;;600:139;;504:245;;;;757:163;;872:6;867:3;860:19;909:4;904:3;900:14;885:29;;853:67;;;;;92:1029:0;;;;;;;",
  "deployedSourceMap": "92:1029:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;92:1029:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11335:135:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;35723:85;;;:::i;:::-;;;;;;;;;;;;;;;;16281:204;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;15567:421;;;;;;;;;;;;;;;;:::i;:::-;;27377:96;;;:::i;:::-;;;;;;;;;;;;;;;;17958:290;;;;;;;;;;;;;;;;:::i;:::-;;26986:232;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18894:134;;;;;;;;;;;;;;;;:::i;:::-;;27819:199;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14908:228;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14471:211;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;607:511:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;35923:89:1;;;:::i;:::-;;;;;;;;;;;;;;;;16786:248;;;;;;;;;;;;;;;;:::i;:::-;;19747:268;;;;;;;;;;;;;;;;:::i;:::-;;128:22:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;36219:205:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;347:252:0;;;;;;;;;;;;;;;;:::i;:::-;;200:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;17364:147:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;11335:135;11405:4;11429:20;:33;11450:11;11429:33;;;;;;;;;;;;;;;;;;;;;;;;;;;11422:40;;11335:135;;;:::o;35723:85::-;35762:13;35795:5;35788:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35723:85;:::o;16281:204::-;16340:7;16368:16;16376:7;16368;:16::i;:::-;16360:73;;;;;;;;;;;;;;;;;;;;;;16453:15;:24;16469:7;16453:24;;;;;;;;;;;;;;;;;;;;;16446:31;;16281:204;;;:::o;15567:421::-;15631:13;15647:16;15655:7;15647;:16::i;:::-;15631:32;;15688:5;15682:11;;:2;:11;;;;15674:57;;;;;;;;;;;;;;;;;;;;;;15766:5;15752:19;;:10;:19;;;:58;;;;15775:35;15792:5;15799:10;15775:16;:35::i;:::-;15752:58;15744:150;;;;;;;;;;;;;;;;;;;;;;15934:2;15907:15;:24;15923:7;15907:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;15972:7;15968:2;15952:28;;15961:5;15952:28;;;;;;;;;;;;15567:421;;;:::o;27377:96::-;27421:7;27448:10;:17;;;;27441:24;;27377:96;:::o;17958:290::-;18102:39;18121:10;18133:7;18102:18;:39::i;:::-;18094:101;;;;;;;;;;;;;;;;;;;;;;18208:32;18222:4;18228:2;18232:7;18208:13;:32::i;:::-;17958:290;;;:::o;26986:232::-;27066:7;27102:16;27112:5;27102:9;:16::i;:::-;27094:5;:24;27086:80;;;;;;;;;;;;;;;;;;;;;;27184:12;:19;27197:5;27184:19;;;;;;;;;;;;;;;27204:5;27184:26;;;;;;;;;;;;;;;;27177:33;;26986:232;;;;:::o;18894:134::-;18981:39;18998:4;19004:2;19008:7;18981:39;;;;;;;;;;;;:16;:39::i;:::-;18894:134;;;:::o;27819:199::-;27877:7;27913:13;:11;:13::i;:::-;27905:5;:21;27897:78;;;;;;;;;;;;;;;;;;;;;;27993:10;28004:5;27993:17;;;;;;;;;;;;;;;;27986:24;;27819:199;;;:::o;14908:228::-;14963:7;14983:13;14999:11;:20;15011:7;14999:20;;;;;;;;;;;;;;;;;;;;;14983:36;;15055:1;15038:19;;:5;:19;;;;15030:73;;;;;;;;;;;;;;;;;;;;;;15123:5;15116:12;;;14908:228;;;:::o;14471:211::-;14526:7;14571:1;14554:19;;:5;:19;;;;14546:74;;;;;;;;;;;;;;;;;;;;;;14640:34;:17;:24;14658:5;14640:24;;;;;;;;;;;;;;;:32;:34::i;:::-;14633:41;;14471:211;;;:::o;607:511:0:-;699:15;732:23;758:17;768:6;758:9;:17::i;:::-;732:43;;786:22;824:15;811:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:54;;851:15;869:1;851:19;;886:9;898:1;886:13;;881:206;905:6;:13;;;;901:1;:17;881:206;;;963:6;944:25;;:12;:15;957:1;944:15;;;;;;;;;;;;;;;;;;;;;:25;;;940:136;;;1008:6;1015:1;1008:9;;;;;;;;;;;;;;;990:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;997:7;990:15;;;;;;;;;;;;;:27;;;;1046:14;1058:1;1046:7;:11;;:14;;;;:::i;:::-;1036:24;;940:136;920:3;;;;;;;881:206;;;;1104:6;1097:13;;;;;607:511;;;:::o;35923:89:1:-;35964:13;35997:7;35990:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35923:89;:::o;16786:248::-;16872:10;16866:16;;:2;:16;;;;16858:54;;;;;;;;;;;;;;;;;;;;;;16962:8;16925:18;:30;16944:10;16925:30;;;;;;;;;;;;;;;:34;16956:2;16925:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;17013:2;16986:40;;17001:10;16986:40;;;17017:8;16986:40;;;;;;;;;;;;;;;16786:248;;:::o;19747:268::-;19854:31;19867:4;19873:2;19877:7;19854:12;:31::i;:::-;19904:48;19927:4;19933:2;19937:7;19946:5;19904:22;:48::i;:::-;19896:111;;;;;;;;;;;;;;;;;;;;;;19747:268;;;;:::o;128:22:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;36219:205:1:-;36277:13;36311:16;36319:7;36311;:16::i;:::-;36303:76;;;;;;;;;;;;;;;;;;;;;;36397:10;:19;36408:7;36397:19;;;;;;;;;;;36390:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36219:205;;;:::o;347:252:0:-;410:12;423:6;410:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:21;401:30;;;;;;442:11;456:6;468;456:19;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;456:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;442:33;;486:22;492:10;504:3;486:5;:22::i;:::-;542:4;519:12;532:6;519:20;;;;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;581:10;557:12;:21;576:1;570:3;:7;557:21;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;347:252;;:::o;200:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;17364:147:1:-;17444:4;17468:18;:25;17487:5;17468:25;;;;;;;;;;;;;;;:35;17494:8;17468:35;;;;;;;;;;;;;;;;;;;;;;;;;17461:42;;17364:147;;;;:::o;20217:155::-;20274:4;20291:13;20307:11;:20;20319:7;20307:20;;;;;;;;;;;;;;;;;;;;;20291:36;;20362:1;20345:19;;:5;:19;;;;20338:26;;;20217:155;;;:::o;20742:333::-;20827:4;20852:16;20860:7;20852;:16::i;:::-;20844:73;;;;;;;;;;;;;;;;;;;;;;20928:13;20944:16;20952:7;20944;:16::i;:::-;20928:32;;20990:5;20979:16;;:7;:16;;;:51;;;;21023:7;20999:31;;:20;21011:7;20999:11;:20::i;:::-;:31;;;20979:51;:87;;;;21034:32;21051:5;21058:7;21034:16;:32::i;:::-;20979:87;20971:96;;;20742:333;;;;:::o;28402:245::-;28488:38;28508:4;28514:2;28518:7;28488:19;:38::i;:::-;28539:47;28572:4;28578:7;28539:32;:47::i;:::-;28599:40;28627:2;28631:7;28599:27;:40::i;:::-;28402:245;;;:::o;10014:114::-;10079:7;10106;:14;;;10099:21;;10014:114;;;:::o;5082:181::-;5140:7;5160:9;5176:1;5172;:5;5160:17;;5201:1;5196;:6;;5188:46;;;;;;;;;;;;;;;;;;;;;;5254:1;5247:8;;;5082:181;;;;:::o;23989:356::-;24111:4;24138:15;:2;:13;;;:15::i;:::-;24133:60;;24177:4;24170:11;;;;24133:60;24205:13;24237:2;24221:36;;;24258:10;24270:4;24276:7;24285:5;24221:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24221:70:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24221:70:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;24221:70:1;;;;;;;;;24205:86;;12673:10;24320:16;;24310:26;;;:6;:26;;;;24302:35;;;23989:356;;;;;;;:::o;28912:202::-;28976:24;28988:2;28992:7;28976:11;:24::i;:::-;29013:40;29041:2;29045:7;29013:27;:40::i;:::-;29066;29098:7;29066:31;:40::i;:::-;28912:202;;:::o;22944:459::-;23058:4;23038:24;;:16;23046:7;23038;:16::i;:::-;:24;;;23030:78;;;;;;;;;;;;;;;;;;;;;;23141:1;23127:16;;:2;:16;;;;23119:65;;;;;;;;;;;;;;;;;;;;;;23197:23;23212:7;23197:14;:23::i;:::-;23233:35;:17;:23;23251:4;23233:23;;;;;;;;;;;;;;;:33;:35::i;:::-;23279:33;:17;:21;23297:2;23279:21;;;;;;;;;;;;;;;:31;:33::i;:::-;23348:2;23325:11;:20;23337:7;23325:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;23387:7;23383:2;23368:27;;23377:4;23368:27;;;;;;;;;;;;22944:459;;;:::o;31585:1148::-;31851:22;31876:32;31906:1;31876:12;:18;31889:4;31876:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;31851:57;;31919:18;31940:17;:26;31958:7;31940:26;;;;;;;;;;;;31919:47;;32087:14;32073:10;:28;32069:328;;32118:19;32140:12;:18;32153:4;32140:18;;;;;;;;;;;;;;;32159:14;32140:34;;;;;;;;;;;;;;;;32118:56;;32224:11;32191:12;:18;32204:4;32191:18;;;;;;;;;;;;;;;32210:10;32191:30;;;;;;;;;;;;;;;:44;;;;32341:10;32308:17;:30;32326:11;32308:30;;;;;;;;;;;:43;;;;32069:328;;32486:12;:18;32499:4;32486:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;31585:1148;;;;:::o;30409:186::-;30523:12;:16;30536:2;30523:16;;;;;;;;;;;;;;;:23;;;;30494:17;:26;30512:7;30494:26;;;;;;;;;;;:52;;;;30557:12;:16;30570:2;30557:16;;;;;;;;;;;;;;;30579:7;30557:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;30557:30:1;;;;;;;;;;;;;;;;;;;;;;30409:186;;:::o;8473:422::-;8533:4;8741:12;8852:7;8840:20;8832:28;;8886:1;8879:4;:8;8872:15;;;8473:422;;;:::o;21328:335::-;21414:1;21400:16;;:2;:16;;;;21392:61;;;;;;;;;;;;;;;;;;;;;;21473:16;21481:7;21473;:16::i;:::-;21472:17;21464:58;;;;;;;;;;;;;;;;;;;;;;21558:2;21535:11;:20;21547:7;21535:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;21571:33;:17;:21;21589:2;21571:21;;;;;;;;;;;;;;;:31;:33::i;:::-;21647:7;21643:2;21622:33;;21639:1;21622:33;;;;;;;;;;;;21328:335;;:::o;30796:164::-;30900:10;:17;;;;30873:15;:24;30889:7;30873:24;;;;;;;;;;;:44;;;;30928:10;30944:7;30928:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;30928:24:1;;;;;;;;;;;;;;;;;;;;;;30796:164;:::o;24513:175::-;24613:1;24577:38;;:15;:24;24593:7;24577:24;;;;;;;;;;;;;;;;;;;;;:38;;;24573:108;;24667:1;24632:15;:24;24648:7;24632:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;24573:108;24513:175;:::o;10235:110::-;10316:21;10335:1;10316:7;:14;;;:18;;:21;;;;:::i;:::-;10299:7;:14;;:38;;;;10235:110;:::o;10136:91::-;10218:1;10200:7;:14;;;:19;;;;;;;;;;;10136:91;:::o;5538:184::-;5596:7;5629:1;5624;:6;;5616:49;;;;;;;;;;;;;;;;;;;;;;5676:9;5692:1;5688;:5;5676:17;;5713:1;5706:8;;;5538:184;;;;:::o;92:1029:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;352:6;339:20;330:29;;364:32;390:5;364:32;;;324:77;;;;;408:132;;491:6;485:13;476:22;;503:32;529:5;503:32;;;470:70;;;;;548:440;;649:3;642:4;634:6;630:17;626:27;616:2;;667:1;664;657:12;616:2;704:6;691:20;726:64;741:48;782:6;741:48;;;726:64;;;717:73;;810:6;803:5;796:21;846:4;838:6;834:17;879:4;872:5;868:16;914:3;905:6;900:3;896:16;893:25;890:2;;;931:1;928;921:12;890:2;941:41;975:6;970:3;965;941:41;;;609:379;;;;;;;;997:442;;1099:3;1092:4;1084:6;1080:17;1076:27;1066:2;;1117:1;1114;1107:12;1066:2;1154:6;1141:20;1176:65;1191:49;1233:6;1191:49;;;1176:65;;;1167:74;;1261:6;1254:5;1247:21;1297:4;1289:6;1285:17;1330:4;1323:5;1319:16;1365:3;1356:6;1351:3;1347:16;1344:25;1341:2;;;1382:1;1379;1372:12;1341:2;1392:41;1426:6;1421:3;1416;1392:41;;;1059:380;;;;;;;;1447:130;;1527:6;1514:20;1505:29;;1539:33;1566:5;1539:33;;;1499:78;;;;;1584:241;;1688:2;1676:9;1667:7;1663:23;1659:32;1656:2;;;1704:1;1701;1694:12;1656:2;1739:1;1756:53;1801:7;1792:6;1781:9;1777:22;1756:53;;;1746:63;;1718:97;1650:175;;;;;1832:366;;;1953:2;1941:9;1932:7;1928:23;1924:32;1921:2;;;1969:1;1966;1959:12;1921:2;2004:1;2021:53;2066:7;2057:6;2046:9;2042:22;2021:53;;;2011:63;;1983:97;2111:2;2129:53;2174:7;2165:6;2154:9;2150:22;2129:53;;;2119:63;;2090:98;1915:283;;;;;;2205:491;;;;2343:2;2331:9;2322:7;2318:23;2314:32;2311:2;;;2359:1;2356;2349:12;2311:2;2394:1;2411:53;2456:7;2447:6;2436:9;2432:22;2411:53;;;2401:63;;2373:97;2501:2;2519:53;2564:7;2555:6;2544:9;2540:22;2519:53;;;2509:63;;2480:98;2609:2;2627:53;2672:7;2663:6;2652:9;2648:22;2627:53;;;2617:63;;2588:98;2305:391;;;;;;2703:721;;;;;2867:3;2855:9;2846:7;2842:23;2838:33;2835:2;;;2884:1;2881;2874:12;2835:2;2919:1;2936:53;2981:7;2972:6;2961:9;2957:22;2936:53;;;2926:63;;2898:97;3026:2;3044:53;3089:7;3080:6;3069:9;3065:22;3044:53;;;3034:63;;3005:98;3134:2;3152:53;3197:7;3188:6;3177:9;3173:22;3152:53;;;3142:63;;3113:98;3270:2;3259:9;3255:18;3242:32;3294:18;3286:6;3283:30;3280:2;;;3326:1;3323;3316:12;3280:2;3346:62;3400:7;3391:6;3380:9;3376:22;3346:62;;;3336:72;;3221:193;2829:595;;;;;;;;3431:360;;;3549:2;3537:9;3528:7;3524:23;3520:32;3517:2;;;3565:1;3562;3555:12;3517:2;3600:1;3617:53;3662:7;3653:6;3642:9;3638:22;3617:53;;;3607:63;;3579:97;3707:2;3725:50;3767:7;3758:6;3747:9;3743:22;3725:50;;;3715:60;;3686:95;3511:280;;;;;;3798:366;;;3919:2;3907:9;3898:7;3894:23;3890:32;3887:2;;;3935:1;3932;3925:12;3887:2;3970:1;3987:53;4032:7;4023:6;4012:9;4008:22;3987:53;;;3977:63;;3949:97;4077:2;4095:53;4140:7;4131:6;4120:9;4116:22;4095:53;;;4085:63;;4056:98;3881:283;;;;;;4171:239;;4274:2;4262:9;4253:7;4249:23;4245:32;4242:2;;;4290:1;4287;4280:12;4242:2;4325:1;4342:52;4386:7;4377:6;4366:9;4362:22;4342:52;;;4332:62;;4304:96;4236:174;;;;;4417:261;;4531:2;4519:9;4510:7;4506:23;4502:32;4499:2;;;4547:1;4544;4537:12;4499:2;4582:1;4599:63;4654:7;4645:6;4634:9;4630:22;4599:63;;;4589:73;;4561:107;4493:185;;;;;4685:347;;4799:2;4787:9;4778:7;4774:23;4770:32;4767:2;;;4815:1;4812;4805:12;4767:2;4878:1;4867:9;4863:17;4850:31;4901:18;4893:6;4890:30;4887:2;;;4933:1;4930;4923:12;4887:2;4953:63;5008:7;4999:6;4988:9;4984:22;4953:63;;;4943:73;;4829:193;4761:271;;;;;5039:241;;5143:2;5131:9;5122:7;5118:23;5114:32;5111:2;;;5159:1;5156;5149:12;5111:2;5194:1;5211:53;5256:7;5247:6;5236:9;5232:22;5211:53;;;5201:63;;5173:97;5105:175;;;;;5288:181;;5401:62;5459:3;5451:6;5401:62;;;5387:76;;5380:89;;;;;5477:142;5568:45;5607:5;5568:45;;;5563:3;5556:58;5550:69;;;5626:113;5709:24;5727:5;5709:24;;;5704:3;5697:37;5691:48;;;5775:896;;5932:60;5986:5;5932:60;;;6005:92;6090:6;6085:3;6005:92;;;5998:99;;6120:3;6162:4;6154:6;6150:17;6145:3;6141:27;6189:62;6245:5;6189:62;;;6271:7;6299:1;6284:348;6309:6;6306:1;6303:13;6284:348;;;6371:9;6365:4;6361:20;6356:3;6349:33;6416:6;6410:13;6438:76;6509:4;6494:13;6438:76;;;6430:84;;6531:66;6590:6;6531:66;;;6521:76;;6620:4;6615:3;6611:14;6604:21;;6341:291;6331:1;6328;6324:9;6319:14;;6284:348;;;6288:14;6645:4;6638:11;;6662:3;6655:10;;5911:760;;;;;;;;;;6679:104;6756:21;6771:5;6756:21;;;6751:3;6744:34;6738:45;;;6790:343;;6900:38;6932:5;6900:38;;;6950:70;7013:6;7008:3;6950:70;;;6943:77;;7025:52;7070:6;7065:3;7058:4;7051:5;7047:16;7025:52;;;7098:29;7120:6;7098:29;;;7093:3;7089:39;7082:46;;6880:253;;;;;;7140:347;;7252:39;7285:5;7252:39;;;7303:71;7367:6;7362:3;7303:71;;;7296:78;;7379:52;7424:6;7419:3;7412:4;7405:5;7401:16;7379:52;;;7452:29;7474:6;7452:29;;;7447:3;7443:39;7436:46;;7232:255;;;;;;7494:360;;7624:39;7657:5;7624:39;;;7675:89;7757:6;7752:3;7675:89;;;7668:96;;7769:52;7814:6;7809:3;7802:4;7795:5;7791:16;7769:52;;;7842:6;7837:3;7833:16;7826:23;;7604:250;;;;;;7861:319;;7959:35;7988:5;7959:35;;;8006:61;8060:6;8055:3;8006:61;;;7999:68;;8072:52;8117:6;8112:3;8105:4;8098:5;8094:16;8072:52;;;8145:29;8167:6;8145:29;;;8140:3;8136:39;8129:46;;7939:241;;;;;;8187:339;;8295:35;8324:5;8295:35;;;8342:71;8406:6;8401:3;8342:71;;;8335:78;;8418:52;8463:6;8458:3;8451:4;8444:5;8440:16;8418:52;;;8491:29;8513:6;8491:29;;;8486:3;8482:39;8475:46;;8275:251;;;;;;8534:380;;8694:67;8758:2;8753:3;8694:67;;;8687:74;;8794:34;8790:1;8785:3;8781:11;8774:55;8863:13;8858:2;8853:3;8849:12;8842:35;8905:2;8900:3;8896:12;8889:19;;8680:234;;;;8923:387;;9083:67;9147:2;9142:3;9083:67;;;9076:74;;9183:34;9179:1;9174:3;9170:11;9163:55;9252:20;9247:2;9242:3;9238:12;9231:42;9301:2;9296:3;9292:12;9285:19;;9069:241;;;;9319:328;;9479:67;9543:2;9538:3;9479:67;;;9472:74;;9579:30;9575:1;9570:3;9566:11;9559:51;9638:2;9633:3;9629:12;9622:19;;9465:182;;;;9656:327;;9816:67;9880:2;9875:3;9816:67;;;9809:74;;9916:29;9912:1;9907:3;9903:11;9896:50;9974:2;9969:3;9965:12;9958:19;;9802:181;;;;9992:373;;10152:67;10216:2;10211:3;10152:67;;;10145:74;;10252:34;10248:1;10243:3;10239:11;10232:55;10321:6;10316:2;10311:3;10307:12;10300:28;10356:2;10351:3;10347:12;10340:19;;10138:227;;;;10374:325;;10534:67;10598:2;10593:3;10534:67;;;10527:74;;10634:27;10630:1;10625:3;10621:11;10614:48;10690:2;10685:3;10681:12;10674:19;;10520:179;;;;10708:330;;10868:67;10932:2;10927:3;10868:67;;;10861:74;;10968:32;10964:1;10959:3;10955:11;10948:53;11029:2;11024:3;11020:12;11013:19;;10854:184;;;;11047:381;;11207:67;11271:2;11266:3;11207:67;;;11200:74;;11307:34;11303:1;11298:3;11294:11;11287:55;11376:14;11371:2;11366:3;11362:12;11355:36;11419:2;11414:3;11410:12;11403:19;;11193:235;;;;11437:393;;11597:67;11661:2;11656:3;11597:67;;;11590:74;;11697:34;11693:1;11688:3;11684:11;11677:55;11766:26;11761:2;11756:3;11752:12;11745:48;11821:2;11816:3;11812:12;11805:19;;11583:247;;;;11839:379;;11999:67;12063:2;12058:3;11999:67;;;11992:74;;12099:34;12095:1;12090:3;12086:11;12079:55;12168:12;12163:2;12158:3;12154:12;12147:34;12209:2;12204:3;12200:12;12193:19;;11985:233;;;;12227:378;;12387:67;12451:2;12446:3;12387:67;;;12380:74;;12487:34;12483:1;12478:3;12474:11;12467:55;12556:11;12551:2;12546:3;12542:12;12535:33;12596:2;12591:3;12587:12;12580:19;;12373:232;;;;12614:332;;12774:67;12838:2;12833:3;12774:67;;;12767:74;;12874:34;12870:1;12865:3;12861:11;12854:55;12937:2;12932:3;12928:12;12921:19;;12760:186;;;;12955:381;;13115:67;13179:2;13174:3;13115:67;;;13108:74;;13215:34;13211:1;13206:3;13202:11;13195:55;13284:14;13279:2;13274:3;13270:12;13263:36;13327:2;13322:3;13318:12;13311:19;;13101:235;;;;13345:378;;13505:67;13569:2;13564:3;13505:67;;;13498:74;;13605:34;13601:1;13596:3;13592:11;13585:55;13674:11;13669:2;13664:3;13660:12;13653:33;13714:2;13709:3;13705:12;13698:19;;13491:232;;;;13732:384;;13892:67;13956:2;13951:3;13892:67;;;13885:74;;13992:34;13988:1;13983:3;13979:11;13972:55;14061:17;14056:2;14051:3;14047:12;14040:39;14107:2;14102:3;14098:12;14091:19;;13878:238;;;;14125:370;;14285:67;14349:2;14344:3;14285:67;;;14278:74;;14385:34;14381:1;14376:3;14372:11;14365:55;14454:3;14449:2;14444:3;14440:12;14433:25;14486:2;14481:3;14477:12;14470:19;;14271:224;;;;14504:386;;14664:67;14728:2;14723:3;14664:67;;;14657:74;;14764:34;14760:1;14755:3;14751:11;14744:55;14833:19;14828:2;14823:3;14819:12;14812:41;14881:2;14876:3;14872:12;14865:19;;14650:240;;;;14899:381;;15059:67;15123:2;15118:3;15059:67;;;15052:74;;15159:34;15155:1;15150:3;15146:11;15139:55;15228:14;15223:2;15218:3;15214:12;15207:36;15271:2;15266:3;15262:12;15255:19;;15045:235;;;;15288:113;15371:24;15389:5;15371:24;;;15366:3;15359:37;15353:48;;;15408:266;;15554:95;15645:3;15636:6;15554:95;;;15547:102;;15666:3;15659:10;;15535:139;;;;;15681:213;;15799:2;15788:9;15784:18;15776:26;;15813:71;15881:1;15870:9;15866:17;15857:6;15813:71;;;15770:124;;;;;15901:647;;16129:3;16118:9;16114:19;16106:27;;16144:79;16220:1;16209:9;16205:17;16196:6;16144:79;;;16234:72;16302:2;16291:9;16287:18;16278:6;16234:72;;;16317;16385:2;16374:9;16370:18;16361:6;16317:72;;;16437:9;16431:4;16427:20;16422:2;16411:9;16407:18;16400:48;16462:76;16533:4;16524:6;16462:76;;;16454:84;;16100:448;;;;;;;;16555:385;;16735:2;16724:9;16720:18;16712:26;;16785:9;16779:4;16775:20;16771:1;16760:9;16756:17;16749:47;16810:120;16925:4;16916:6;16810:120;;;16802:128;;16706:234;;;;;16947:201;;17059:2;17048:9;17044:18;17036:26;;17073:65;17135:1;17124:9;17120:17;17111:6;17073:65;;;17030:118;;;;;17155:293;;17289:2;17278:9;17274:18;17266:26;;17339:9;17333:4;17329:20;17325:1;17314:9;17310:17;17303:47;17364:74;17433:4;17424:6;17364:74;;;17356:82;;17260:188;;;;;17455:301;;17593:2;17582:9;17578:18;17570:26;;17643:9;17637:4;17633:20;17629:1;17618:9;17614:17;17607:47;17668:78;17741:4;17732:6;17668:78;;;17660:86;;17564:192;;;;;17763:407;;17954:2;17943:9;17939:18;17931:26;;18004:9;17998:4;17994:20;17990:1;17979:9;17975:17;17968:47;18029:131;18155:4;18029:131;;;18021:139;;17925:245;;;;18177:407;;18368:2;18357:9;18353:18;18345:26;;18418:9;18412:4;18408:20;18404:1;18393:9;18389:17;18382:47;18443:131;18569:4;18443:131;;;18435:139;;18339:245;;;;18591:407;;18782:2;18771:9;18767:18;18759:26;;18832:9;18826:4;18822:20;18818:1;18807:9;18803:17;18796:47;18857:131;18983:4;18857:131;;;18849:139;;18753:245;;;;19005:407;;19196:2;19185:9;19181:18;19173:26;;19246:9;19240:4;19236:20;19232:1;19221:9;19217:17;19210:47;19271:131;19397:4;19271:131;;;19263:139;;19167:245;;;;19419:407;;19610:2;19599:9;19595:18;19587:26;;19660:9;19654:4;19650:20;19646:1;19635:9;19631:17;19624:47;19685:131;19811:4;19685:131;;;19677:139;;19581:245;;;;19833:407;;20024:2;20013:9;20009:18;20001:26;;20074:9;20068:4;20064:20;20060:1;20049:9;20045:17;20038:47;20099:131;20225:4;20099:131;;;20091:139;;19995:245;;;;20247:407;;20438:2;20427:9;20423:18;20415:26;;20488:9;20482:4;20478:20;20474:1;20463:9;20459:17;20452:47;20513:131;20639:4;20513:131;;;20505:139;;20409:245;;;;20661:407;;20852:2;20841:9;20837:18;20829:26;;20902:9;20896:4;20892:20;20888:1;20877:9;20873:17;20866:47;20927:131;21053:4;20927:131;;;20919:139;;20823:245;;;;21075:407;;21266:2;21255:9;21251:18;21243:26;;21316:9;21310:4;21306:20;21302:1;21291:9;21287:17;21280:47;21341:131;21467:4;21341:131;;;21333:139;;21237:245;;;;21489:407;;21680:2;21669:9;21665:18;21657:26;;21730:9;21724:4;21720:20;21716:1;21705:9;21701:17;21694:47;21755:131;21881:4;21755:131;;;21747:139;;21651:245;;;;21903:407;;22094:2;22083:9;22079:18;22071:26;;22144:9;22138:4;22134:20;22130:1;22119:9;22115:17;22108:47;22169:131;22295:4;22169:131;;;22161:139;;22065:245;;;;22317:407;;22508:2;22497:9;22493:18;22485:26;;22558:9;22552:4;22548:20;22544:1;22533:9;22529:17;22522:47;22583:131;22709:4;22583:131;;;22575:139;;22479:245;;;;22731:407;;22922:2;22911:9;22907:18;22899:26;;22972:9;22966:4;22962:20;22958:1;22947:9;22943:17;22936:47;22997:131;23123:4;22997:131;;;22989:139;;22893:245;;;;23145:407;;23336:2;23325:9;23321:18;23313:26;;23386:9;23380:4;23376:20;23372:1;23361:9;23357:17;23350:47;23411:131;23537:4;23411:131;;;23403:139;;23307:245;;;;23559:407;;23750:2;23739:9;23735:18;23727:26;;23800:9;23794:4;23790:20;23786:1;23775:9;23771:17;23764:47;23825:131;23951:4;23825:131;;;23817:139;;23721:245;;;;23973:407;;24164:2;24153:9;24149:18;24141:26;;24214:9;24208:4;24204:20;24200:1;24189:9;24185:17;24178:47;24239:131;24365:4;24239:131;;;24231:139;;24135:245;;;;24387:407;;24578:2;24567:9;24563:18;24555:26;;24628:9;24622:4;24618:20;24614:1;24603:9;24599:17;24592:47;24653:131;24779:4;24653:131;;;24645:139;;24549:245;;;;24801:407;;24992:2;24981:9;24977:18;24969:26;;25042:9;25036:4;25032:20;25028:1;25017:9;25013:17;25006:47;25067:131;25193:4;25067:131;;;25059:139;;24963:245;;;;25215:213;;25333:2;25322:9;25318:18;25310:26;;25347:71;25415:1;25404:9;25400:17;25391:6;25347:71;;;25304:124;;;;;25435:256;;25497:2;25491:9;25481:19;;25535:4;25527:6;25523:17;25634:6;25622:10;25619:22;25598:18;25586:10;25583:34;25580:62;25577:2;;;25655:1;25652;25645:12;25577:2;25675:10;25671:2;25664:22;25475:216;;;;;25698:321;;25841:18;25833:6;25830:30;25827:2;;;25873:1;25870;25863:12;25827:2;25940:4;25936:9;25929:4;25921:6;25917:17;25913:33;25905:41;;26004:4;25998;25994:15;25986:23;;25764:255;;;;26026:322;;26170:18;26162:6;26159:30;26156:2;;;26202:1;26199;26192:12;26156:2;26269:4;26265:9;26258:4;26250:6;26246:17;26242:33;26234:41;;26333:4;26327;26323:15;26315:23;;26093:255;;;;26355:157;;26447:3;26439:11;;26485:4;26480:3;26476:14;26468:22;;26433:79;;;;26519:143;;26634:5;26628:12;26618:22;;26599:63;;;;26669:121;;26762:5;26756:12;26746:22;;26727:63;;;;26797:118;;26887:5;26881:12;26871:22;;26852:63;;;;26922:122;;27016:5;27010:12;27000:22;;26981:63;;;;27051:114;;27155:4;27150:3;27146:14;27138:22;;27132:33;;;;27173:184;;27309:6;27304:3;27297:19;27346:4;27341:3;27337:14;27322:29;;27290:67;;;;;27366:162;;27480:6;27475:3;27468:19;27517:4;27512:3;27508:14;27493:29;;27461:67;;;;;27537:153;;27642:6;27637:3;27630:19;27679:4;27674:3;27670:14;27655:29;;27623:67;;;;;27699:163;;27814:6;27809:3;27802:19;27851:4;27846:3;27842:14;27827:29;;27795:67;;;;;27871:145;;28007:3;27992:18;;27985:31;;;;;28024:91;;28086:24;28104:5;28086:24;;;28075:35;;28069:46;;;;28122:85;;28195:5;28188:13;28181:21;28170:32;;28164:43;;;;28214:144;;28286:66;28279:5;28275:78;28264:89;;28258:100;;;;28365:121;;28438:42;28431:5;28427:54;28416:65;;28410:76;;;;28493:72;;28555:5;28544:16;;28538:27;;;;28572:129;;28659:37;28690:5;28659:37;;;28646:50;;28640:61;;;;28708:121;;28787:37;28818:5;28787:37;;;28774:50;;28768:61;;;;28836:108;;28915:24;28933:5;28915:24;;;28902:37;;28896:48;;;;28952:145;29033:6;29028:3;29023;29010:30;29089:1;29080:6;29075:3;29071:16;29064:27;29003:94;;;;29106:268;29171:1;29178:101;29192:6;29189:1;29186:13;29178:101;;;29268:1;29263:3;29259:11;29253:18;29249:1;29244:3;29240:11;29233:39;29214:2;29211:1;29207:10;29202:15;;29178:101;;;29294:6;29291:1;29288:13;29285:2;;;29359:1;29350:6;29345:3;29341:16;29334:27;29285:2;29155:219;;;;;29382:97;;29470:2;29466:7;29461:2;29454:5;29450:14;29446:28;29436:38;;29430:49;;;;29487:117;29556:24;29574:5;29556:24;;;29549:5;29546:35;29536:2;;29595:1;29592;29585:12;29536:2;29530:74;;29611:111;29677:21;29692:5;29677:21;;;29670:5;29667:32;29657:2;;29713:1;29710;29703:12;29657:2;29651:71;;29729:115;29797:23;29814:5;29797:23;;;29790:5;29787:34;29777:2;;29835:1;29832;29825:12;29777:2;29771:73;;29851:117;29920:24;29938:5;29920:24;;;29913:5;29910:35;29900:2;;29959:1;29956;29949:12;29900:2;29894:74;",
  "source": "pragma solidity 0.5.16;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./ERC721Full.sol\";\r\n\r\ncontract Color is ERC721Full {\r\n    string[] public colors;\r\n    mapping(string => bool) _colorExists;\r\n    mapping(uint256 => address) public colorToOwner;\r\n\r\n    constructor() public ERC721Full(\"Color\", \"COLOR\") {}\r\n\r\n    // E.G. color = \"#FFFFFF\"\r\n    function mint(string memory _color) public {\r\n        require(!_colorExists[_color]);\r\n        uint256 _id = colors.push(_color);\r\n        _mint(msg.sender, _id);\r\n        _colorExists[_color] = true;\r\n        colorToOwner[_id - 1] = msg.sender;\r\n    }\r\n\r\n    function getColorsByOwner(address _owner)\r\n        external\r\n        view\r\n        returns (string[] memory)\r\n    {\r\n        uint256 ownerTokenCount = balanceOf(_owner);\r\n        string[] memory result = new string[](ownerTokenCount);\r\n        uint256 counter = 0;\r\n        for (uint256 i = 0; i < colors.length; i++) {\r\n            if (colorToOwner[i] == _owner) {\r\n                result[counter] = colors[i];\r\n                counter = counter.add(1);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/TungNT2K/Desktop/CryptoColor/src/contracts/Color.sol",
  "ast": {
    "absolutePath": "/C/Users/TungNT2K/Desktop/CryptoColor/src/contracts/Color.sol",
    "exportedSymbols": {
      "Color": [
        132
      ]
    },
    "id": 133,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:0"
      },
      {
        "absolutePath": "/C/Users/TungNT2K/Desktop/CryptoColor/src/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 133,
        "sourceUnit": 1588,
        "src": "62:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1587,
              "src": "110:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1587",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "110:10:0"
          }
        ],
        "contractDependencies": [
          142,
          243,
          505,
          1063,
          1088,
          1421,
          1442,
          1567,
          1587
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 132,
        "linearizedBaseContracts": [
          132,
          1587,
          1567,
          1442,
          1421,
          1088,
          1063,
          243,
          505,
          142
        ],
        "name": "Color",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "colors",
            "nodeType": "VariableDeclaration",
            "scope": 132,
            "src": "128:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 6,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "128:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 7,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "128:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "name": "_colorExists",
            "nodeType": "VariableDeclaration",
            "scope": 132,
            "src": "157:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "165:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "157:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 10,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "175:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "name": "colorToOwner",
            "nodeType": "VariableDeclaration",
            "scope": 132,
            "src": "200:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "208:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "200:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "219:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "306:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 24,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "436f6c6f72",
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "288:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f86d44f1b3080fc640c3bc711000ce53504da44b246ae744f9a196485424813c",
                      "typeString": "literal_string \"Color\""
                    },
                    "value": "Color"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "434f4c4f52",
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "297:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e108be43dbedebdd6a5e12088e3ff0ee819db892baccf0fc636e26a2da6c252c",
                      "typeString": "literal_string \"COLOR\""
                    },
                    "value": "COLOR"
                  }
                ],
                "id": 21,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 18,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1587,
                  "src": "277:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1587_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "277:28:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:2:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:0"
            },
            "scope": 132,
            "src": "256:52:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "390:209:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "409:21:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 30,
                            "name": "_colorExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "410:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 32,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 31,
                            "name": "_color",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "423:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "410:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 29,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1605,
                        1606
                      ],
                      "referencedDeclaration": 1605,
                      "src": "401:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "401:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "401:30:0"
                },
                {
                  "assignments": [
                    37
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37,
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 64,
                      "src": "442:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "442:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 42,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "468:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "456:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "456:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$_t_uint256_$",
                        "typeString": "function (string storage ref) returns (uint256)"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "456:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "442:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1602,
                          "src": "492:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "492:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 46,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "504:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1228
                      ],
                      "referencedDeclaration": 1228,
                      "src": "486:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "486:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "486:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "_colorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "519:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 51,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "532:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "519:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "542:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "519:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "519:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "colorToOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "557:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 59,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 56,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "570:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "576:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "570:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "557:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1602,
                        "src": "581:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "581:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "557:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "557:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "361:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "360:22:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "390:0:0"
            },
            "scope": 132,
            "src": "347:252:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "721:397:0",
              "statements": [
                {
                  "assignments": [
                    74
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74,
                      "name": "ownerTokenCount",
                      "nodeType": "VariableDeclaration",
                      "scope": 130,
                      "src": "732:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "732:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "768:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        574
                      ],
                      "referencedDeclaration": 574,
                      "src": "758:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "758:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "732:43:0"
                },
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 130,
                      "src": "786:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "786:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 81,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "786:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 88,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "ownerTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "824:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "811:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 83,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "815:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 84,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "815:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "811:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_$dyn_memory",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "786:54:0"
                },
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "name": "counter",
                      "nodeType": "VariableDeclaration",
                      "scope": 130,
                      "src": "851:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "851:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 92,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "869:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "851:19:0"
                },
                {
                  "body": {
                    "id": 126,
                    "nodeType": "Block",
                    "src": "925:162:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 104,
                              "name": "colorToOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "944:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 106,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 105,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "957:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "944:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 107,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "963:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "944:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 125,
                        "nodeType": "IfStatement",
                        "src": "940:136:0",
                        "trueBody": {
                          "id": 124,
                          "nodeType": "Block",
                          "src": "971:105:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 109,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82,
                                    "src": "990:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 111,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 110,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 90,
                                    "src": "997:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "990:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 112,
                                    "name": "colors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8,
                                    "src": "1008:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                      "typeString": "string storage ref[] storage ref"
                                    }
                                  },
                                  "id": 114,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 113,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "1015:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1008:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "990:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 116,
                              "nodeType": "ExpressionStatement",
                              "src": "990:27:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 117,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90,
                                  "src": "1036:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 120,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1058:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 118,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "1046:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 119,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 284,
                                    "src": "1046:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 121,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1046:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1036:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 123,
                              "nodeType": "ExpressionStatement",
                              "src": "1036:24:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 97,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "901:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "905:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "905:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "901:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 127,
                  "initializationExpression": {
                    "assignments": [
                      94
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 94,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 127,
                        "src": "886:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "886:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 96,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "898:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "886:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "920:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "920:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 103,
                    "nodeType": "ExpressionStatement",
                    "src": "920:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "881:206:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82,
                    "src": "1104:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 72,
                  "id": 129,
                  "nodeType": "Return",
                  "src": "1097:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getColorsByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "633:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "632:16:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "699:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 69,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "699:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 70,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "699:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "698:17:0"
            },
            "scope": 132,
            "src": "607:511:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 133,
        "src": "92:1029:0"
      }
    ],
    "src": "0:1123:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/TungNT2K/Desktop/CryptoColor/src/contracts/Color.sol",
      "exportedSymbols": {
        "Color": [
          132
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "25:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 1588,
          "absolutePath": "/C/Users/TungNT2K/Desktop/CryptoColor/src/contracts/ERC721Full.sol",
          "file": "./ERC721Full.sol",
          "scope": 133,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "62:26:0"
      },
      {
        "attributes": {
          "contractDependencies": [
            142,
            243,
            505,
            1063,
            1088,
            1421,
            1442,
            1567,
            1587
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            132,
            1587,
            1567,
            1442,
            1421,
            1088,
            1063,
            243,
            505,
            142
          ],
          "name": "Color",
          "scope": 133
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Full",
                  "referencedDeclaration": 1587,
                  "type": "contract ERC721Full"
                },
                "id": 4,
                "name": "UserDefinedTypeName",
                "src": "110:10:0"
              }
            ],
            "id": 5,
            "name": "InheritanceSpecifier",
            "src": "110:10:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "colors",
              "scope": 132,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "string[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 6,
                    "name": "ElementaryTypeName",
                    "src": "128:6:0"
                  }
                ],
                "id": 7,
                "name": "ArrayTypeName",
                "src": "128:8:0"
              }
            ],
            "id": 8,
            "name": "VariableDeclaration",
            "src": "128:22:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_colorExists",
              "scope": 132,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => bool)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 9,
                    "name": "ElementaryTypeName",
                    "src": "165:6:0"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 10,
                    "name": "ElementaryTypeName",
                    "src": "175:4:0"
                  }
                ],
                "id": 11,
                "name": "Mapping",
                "src": "157:23:0"
              }
            ],
            "id": 12,
            "name": "VariableDeclaration",
            "src": "157:36:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "colorToOwner",
              "scope": 132,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => address)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => address)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 13,
                    "name": "ElementaryTypeName",
                    "src": "208:7:0"
                  },
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 14,
                    "name": "ElementaryTypeName",
                    "src": "219:7:0"
                  }
                ],
                "id": 15,
                "name": "Mapping",
                "src": "200:27:0"
              }
            ],
            "id": 16,
            "name": "VariableDeclaration",
            "src": "200:47:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 132,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17,
                "name": "ParameterList",
                "src": "267:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 22,
                "name": "ParameterList",
                "src": "306:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1587,
                      "type": "type(contract ERC721Full)",
                      "value": "ERC721Full"
                    },
                    "id": 18,
                    "name": "Identifier",
                    "src": "277:10:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "436f6c6f72",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Color\"",
                      "value": "Color"
                    },
                    "id": 19,
                    "name": "Literal",
                    "src": "288:7:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "434f4c4f52",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"COLOR\"",
                      "value": "COLOR"
                    },
                    "id": 20,
                    "name": "Literal",
                    "src": "297:7:0"
                  }
                ],
                "id": 21,
                "name": "ModifierInvocation",
                "src": "277:28:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 23,
                "name": "Block",
                "src": "306:2:0"
              }
            ],
            "id": 24,
            "name": "FunctionDefinition",
            "src": "256:52:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 132,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_color",
                      "scope": 65,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 25,
                        "name": "ElementaryTypeName",
                        "src": "361:6:0"
                      }
                    ],
                    "id": 26,
                    "name": "VariableDeclaration",
                    "src": "361:20:0"
                  }
                ],
                "id": 27,
                "name": "ParameterList",
                "src": "360:22:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 28,
                "name": "ParameterList",
                "src": "390:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                1605,
                                1606
                              ],
                              "referencedDeclaration": 1605,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 29,
                            "name": "Identifier",
                            "src": "401:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 12,
                                      "type": "mapping(string memory => bool)",
                                      "value": "_colorExists"
                                    },
                                    "id": 30,
                                    "name": "Identifier",
                                    "src": "410:12:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 26,
                                      "type": "string memory",
                                      "value": "_color"
                                    },
                                    "id": 31,
                                    "name": "Identifier",
                                    "src": "423:6:0"
                                  }
                                ],
                                "id": 32,
                                "name": "IndexAccess",
                                "src": "410:20:0"
                              }
                            ],
                            "id": 33,
                            "name": "UnaryOperation",
                            "src": "409:21:0"
                          }
                        ],
                        "id": 34,
                        "name": "FunctionCall",
                        "src": "401:30:0"
                      }
                    ],
                    "id": 35,
                    "name": "ExpressionStatement",
                    "src": "401:30:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        37
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "_id",
                          "scope": 64,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 36,
                            "name": "ElementaryTypeName",
                            "src": "442:7:0"
                          }
                        ],
                        "id": 37,
                        "name": "VariableDeclaration",
                        "src": "442:11:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (string storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8,
                                  "type": "string storage ref[] storage ref",
                                  "value": "colors"
                                },
                                "id": 38,
                                "name": "Identifier",
                                "src": "456:6:0"
                              }
                            ],
                            "id": 39,
                            "name": "MemberAccess",
                            "src": "456:11:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 26,
                              "type": "string memory",
                              "value": "_color"
                            },
                            "id": 40,
                            "name": "Identifier",
                            "src": "468:6:0"
                          }
                        ],
                        "id": 41,
                        "name": "FunctionCall",
                        "src": "456:19:0"
                      }
                    ],
                    "id": 42,
                    "name": "VariableDeclarationStatement",
                    "src": "442:33:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                1228
                              ],
                              "referencedDeclaration": 1228,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 43,
                            "name": "Identifier",
                            "src": "486:5:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1602,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 44,
                                "name": "Identifier",
                                "src": "492:3:0"
                              }
                            ],
                            "id": 45,
                            "name": "MemberAccess",
                            "src": "492:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37,
                              "type": "uint256",
                              "value": "_id"
                            },
                            "id": 46,
                            "name": "Identifier",
                            "src": "504:3:0"
                          }
                        ],
                        "id": 47,
                        "name": "FunctionCall",
                        "src": "486:22:0"
                      }
                    ],
                    "id": 48,
                    "name": "ExpressionStatement",
                    "src": "486:22:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 12,
                                  "type": "mapping(string memory => bool)",
                                  "value": "_colorExists"
                                },
                                "id": 49,
                                "name": "Identifier",
                                "src": "519:12:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 26,
                                  "type": "string memory",
                                  "value": "_color"
                                },
                                "id": 50,
                                "name": "Identifier",
                                "src": "532:6:0"
                              }
                            ],
                            "id": 51,
                            "name": "IndexAccess",
                            "src": "519:20:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 52,
                            "name": "Literal",
                            "src": "542:4:0"
                          }
                        ],
                        "id": 53,
                        "name": "Assignment",
                        "src": "519:27:0"
                      }
                    ],
                    "id": 54,
                    "name": "ExpressionStatement",
                    "src": "519:27:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 16,
                                  "type": "mapping(uint256 => address)",
                                  "value": "colorToOwner"
                                },
                                "id": 55,
                                "name": "Identifier",
                                "src": "557:12:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "-",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37,
                                      "type": "uint256",
                                      "value": "_id"
                                    },
                                    "id": 56,
                                    "name": "Identifier",
                                    "src": "570:3:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 57,
                                    "name": "Literal",
                                    "src": "576:1:0"
                                  }
                                ],
                                "id": 58,
                                "name": "BinaryOperation",
                                "src": "570:7:0"
                              }
                            ],
                            "id": 59,
                            "name": "IndexAccess",
                            "src": "557:21:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1602,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 60,
                                "name": "Identifier",
                                "src": "581:3:0"
                              }
                            ],
                            "id": 61,
                            "name": "MemberAccess",
                            "src": "581:10:0"
                          }
                        ],
                        "id": 62,
                        "name": "Assignment",
                        "src": "557:34:0"
                      }
                    ],
                    "id": 63,
                    "name": "ExpressionStatement",
                    "src": "557:34:0"
                  }
                ],
                "id": 64,
                "name": "Block",
                "src": "390:209:0"
              }
            ],
            "id": 65,
            "name": "FunctionDefinition",
            "src": "347:252:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getColorsByOwner",
              "scope": 132,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owner",
                      "scope": 131,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 66,
                        "name": "ElementaryTypeName",
                        "src": "633:7:0"
                      }
                    ],
                    "id": 67,
                    "name": "VariableDeclaration",
                    "src": "633:14:0"
                  }
                ],
                "id": 68,
                "name": "ParameterList",
                "src": "632:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 131,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "string[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 69,
                            "name": "ElementaryTypeName",
                            "src": "699:6:0"
                          }
                        ],
                        "id": 70,
                        "name": "ArrayTypeName",
                        "src": "699:8:0"
                      }
                    ],
                    "id": 71,
                    "name": "VariableDeclaration",
                    "src": "699:15:0"
                  }
                ],
                "id": 72,
                "name": "ParameterList",
                "src": "698:17:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        74
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "ownerTokenCount",
                          "scope": 130,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 73,
                            "name": "ElementaryTypeName",
                            "src": "732:7:0"
                          }
                        ],
                        "id": 74,
                        "name": "VariableDeclaration",
                        "src": "732:23:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                574
                              ],
                              "referencedDeclaration": 574,
                              "type": "function (address) view returns (uint256)",
                              "value": "balanceOf"
                            },
                            "id": 75,
                            "name": "Identifier",
                            "src": "758:9:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 67,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 76,
                            "name": "Identifier",
                            "src": "768:6:0"
                          }
                        ],
                        "id": 77,
                        "name": "FunctionCall",
                        "src": "758:17:0"
                      }
                    ],
                    "id": 78,
                    "name": "VariableDeclarationStatement",
                    "src": "732:43:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        82
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "result",
                          "scope": 130,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "string[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "string[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "string",
                                  "type": "string"
                                },
                                "id": 80,
                                "name": "ElementaryTypeName",
                                "src": "786:6:0"
                              }
                            ],
                            "id": 81,
                            "name": "ArrayTypeName",
                            "src": "786:8:0"
                          }
                        ],
                        "id": 82,
                        "name": "VariableDeclaration",
                        "src": "786:22:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "string memory[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (string memory[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "length": null,
                                  "type": "string[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "string",
                                      "type": "string"
                                    },
                                    "id": 83,
                                    "name": "ElementaryTypeName",
                                    "src": "815:6:0"
                                  }
                                ],
                                "id": 84,
                                "name": "ArrayTypeName",
                                "src": "815:8:0"
                              }
                            ],
                            "id": 85,
                            "name": "NewExpression",
                            "src": "811:12:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 74,
                              "type": "uint256",
                              "value": "ownerTokenCount"
                            },
                            "id": 86,
                            "name": "Identifier",
                            "src": "824:15:0"
                          }
                        ],
                        "id": 87,
                        "name": "FunctionCall",
                        "src": "811:29:0"
                      }
                    ],
                    "id": 88,
                    "name": "VariableDeclarationStatement",
                    "src": "786:54:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        90
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "counter",
                          "scope": 130,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 89,
                            "name": "ElementaryTypeName",
                            "src": "851:7:0"
                          }
                        ],
                        "id": 90,
                        "name": "VariableDeclaration",
                        "src": "851:15:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 91,
                        "name": "Literal",
                        "src": "869:1:0"
                      }
                    ],
                    "id": 92,
                    "name": "VariableDeclarationStatement",
                    "src": "851:19:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            94
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 127,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 93,
                                "name": "ElementaryTypeName",
                                "src": "886:7:0"
                              }
                            ],
                            "id": 94,
                            "name": "VariableDeclaration",
                            "src": "886:9:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 95,
                            "name": "Literal",
                            "src": "898:1:0"
                          }
                        ],
                        "id": 96,
                        "name": "VariableDeclarationStatement",
                        "src": "886:13:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 94,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 97,
                            "name": "Identifier",
                            "src": "901:1:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8,
                                  "type": "string storage ref[] storage ref",
                                  "value": "colors"
                                },
                                "id": 98,
                                "name": "Identifier",
                                "src": "905:6:0"
                              }
                            ],
                            "id": 99,
                            "name": "MemberAccess",
                            "src": "905:13:0"
                          }
                        ],
                        "id": 100,
                        "name": "BinaryOperation",
                        "src": "901:17:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 94,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 101,
                                "name": "Identifier",
                                "src": "920:1:0"
                              }
                            ],
                            "id": 102,
                            "name": "UnaryOperation",
                            "src": "920:3:0"
                          }
                        ],
                        "id": 103,
                        "name": "ExpressionStatement",
                        "src": "920:3:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 16,
                                          "type": "mapping(uint256 => address)",
                                          "value": "colorToOwner"
                                        },
                                        "id": 104,
                                        "name": "Identifier",
                                        "src": "944:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 94,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 105,
                                        "name": "Identifier",
                                        "src": "957:1:0"
                                      }
                                    ],
                                    "id": 106,
                                    "name": "IndexAccess",
                                    "src": "944:15:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 67,
                                      "type": "address",
                                      "value": "_owner"
                                    },
                                    "id": 107,
                                    "name": "Identifier",
                                    "src": "963:6:0"
                                  }
                                ],
                                "id": 108,
                                "name": "BinaryOperation",
                                "src": "944:25:0"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "string memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "string memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 82,
                                                  "type": "string memory[] memory",
                                                  "value": "result"
                                                },
                                                "id": 109,
                                                "name": "Identifier",
                                                "src": "990:6:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 90,
                                                  "type": "uint256",
                                                  "value": "counter"
                                                },
                                                "id": 110,
                                                "name": "Identifier",
                                                "src": "997:7:0"
                                              }
                                            ],
                                            "id": 111,
                                            "name": "IndexAccess",
                                            "src": "990:15:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "string storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 8,
                                                  "type": "string storage ref[] storage ref",
                                                  "value": "colors"
                                                },
                                                "id": 112,
                                                "name": "Identifier",
                                                "src": "1008:6:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 94,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 113,
                                                "name": "Identifier",
                                                "src": "1015:1:0"
                                              }
                                            ],
                                            "id": 114,
                                            "name": "IndexAccess",
                                            "src": "1008:9:0"
                                          }
                                        ],
                                        "id": 115,
                                        "name": "Assignment",
                                        "src": "990:27:0"
                                      }
                                    ],
                                    "id": 116,
                                    "name": "ExpressionStatement",
                                    "src": "990:27:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 90,
                                              "type": "uint256",
                                              "value": "counter"
                                            },
                                            "id": 117,
                                            "name": "Identifier",
                                            "src": "1036:7:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_1_by_1",
                                                      "typeString": "int_const 1"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "add",
                                                  "referencedDeclaration": 284,
                                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 90,
                                                      "type": "uint256",
                                                      "value": "counter"
                                                    },
                                                    "id": 118,
                                                    "name": "Identifier",
                                                    "src": "1046:7:0"
                                                  }
                                                ],
                                                "id": 119,
                                                "name": "MemberAccess",
                                                "src": "1046:11:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "hexvalue": "31",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "subdenomination": null,
                                                  "token": "number",
                                                  "type": "int_const 1",
                                                  "value": "1"
                                                },
                                                "id": 120,
                                                "name": "Literal",
                                                "src": "1058:1:0"
                                              }
                                            ],
                                            "id": 121,
                                            "name": "FunctionCall",
                                            "src": "1046:14:0"
                                          }
                                        ],
                                        "id": 122,
                                        "name": "Assignment",
                                        "src": "1036:24:0"
                                      }
                                    ],
                                    "id": 123,
                                    "name": "ExpressionStatement",
                                    "src": "1036:24:0"
                                  }
                                ],
                                "id": 124,
                                "name": "Block",
                                "src": "971:105:0"
                              }
                            ],
                            "id": 125,
                            "name": "IfStatement",
                            "src": "940:136:0"
                          }
                        ],
                        "id": 126,
                        "name": "Block",
                        "src": "925:162:0"
                      }
                    ],
                    "id": 127,
                    "name": "ForStatement",
                    "src": "881:206:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 72
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 82,
                          "type": "string memory[] memory",
                          "value": "result"
                        },
                        "id": 128,
                        "name": "Identifier",
                        "src": "1104:6:0"
                      }
                    ],
                    "id": 129,
                    "name": "Return",
                    "src": "1097:13:0"
                  }
                ],
                "id": 130,
                "name": "Block",
                "src": "721:397:0"
              }
            ],
            "id": 131,
            "name": "FunctionDefinition",
            "src": "607:511:0"
          }
        ],
        "id": 132,
        "name": "ContractDefinition",
        "src": "92:1029:0"
      }
    ],
    "id": 133,
    "name": "SourceUnit",
    "src": "0:1123:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xEcb86f66E68e78a77555715A22855E0873BB88e9",
      "transactionHash": "0x32b6e17fe4bc9f852ab5980fe6c86ada3d8768a92d447450a6bc3d0303796114"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-23T04:16:34.942Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.      * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}